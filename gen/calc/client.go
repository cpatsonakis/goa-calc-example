// Code generated by goa v3.8.5, DO NOT EDIT.
//
// calc client
//
// Command:
// $ goa gen github.com/cpatsonakis/goa-calc-example/design/demo

package calc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "calc" service client.
type Client struct {
	MultiplyEndpoint goa.Endpoint
}

// NewClient initializes a "calc" service client given the endpoints.
func NewClient(multiply goa.Endpoint) *Client {
	return &Client{
		MultiplyEndpoint: multiply,
	}
}

// Multiply calls the "multiply" endpoint of the "calc" service.
// Multiply may return the following errors:
//   - "mul_error" (type StringError)
//   - "bad_request" (type *BadRequestError)
//   - error: internal error
func (c *Client) Multiply(ctx context.Context, p *MultiplicationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.MultiplyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
